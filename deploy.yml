services:
  mysql-test:
    image: mysql:8.0
    container_name: mysql-test 
    ports:
      - "3316:3306"
    environment:
      - MYSQL_DATABASE=test
      - MYSQL_ROOT_PASSWORD=1234
      - TZ=Asia/Seoul
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ~/data/mysql-test:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test_network

  controller-1:
    image: apache/kafka:latest
    container_name: controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - test_network

  broker-1:
    image: apache/kafka:latest
    container_name: broker-1
    ports:
      - 19092:9092
    healthcheck:
      test: /opt/kafka/bin/kafka-topics.sh --list --bootstrap-server broker-1:9093 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:9092,PLAINTEXT_INTERNAL://:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:19092,PLAINTEXT_INTERNAL://broker-1:9093'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - controller-1
    networks:
      - test_network


  study-service:
    image: kuuku123/study-service:latest
    container_name: study-service
    depends_on:
      mysql-test:
        condition: service_healthy
      broker-1:
        condition: service_healthy

    ports:
      - "8081:8081"
    entrypoint: ["java", "-jar", "-Djasypt.encryptor.password=my_jasypt_key", "-Dspring.profiles.active=prod", "/app/study-service.jar"]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 10
        window: 60s
    networks:
      - test_network

  notifcation-app:
    image: kuuku123/studycafe_webflux_notification:latest
    depends_on:
      broker-1:
        condition: service_healthy
    ports:
      - "8082:8082" # Map container port to host
    environment:
      SPRING_PROFILES_ACTIVE: prod # Set the Spring profile
    networks:
      - test_network

networks:
  test_network:
